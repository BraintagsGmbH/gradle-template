apply from: rootDir.path + '/gradle/javaProject.gradle'

def vertxVersion      = rootProject.hasProperty('vertxVersion')?rootProject.vertxVersion:''
def btVertxVersion    = rootProject.hasProperty('btVertxVersion')?rootProject.btVertxVersion:''

configurations {
    provided
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'io.vertx') {
            details.useVersion vertxVersion
        }
    }
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'de.braintags' && details.requested.version == btVertxVersion) {
            details.useVersion btVertxVersion
        }
    }
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

dependencies {
  compile group: 'io.vertx', name:'vertx-core', version:vertxVersion
  testCompile group: 'io.vertx', name:'vertx-core', version:vertxVersion, classifier:'tests'
  testCompile group: 'io.vertx', name:'vertx-unit', version:vertxVersion
  compile group: 'io.vertx', name: 'vertx-docgen', version:vertxVersion
  compile group: 'io.vertx', name: 'vertx-dependencies', version:vertxVersion

  provided group: 'io.vertx', name:'vertx-codegen', version:vertxVersion
  provided group: 'io.vertx', name:'vertx-docgen', version:vertxVersion
  provided group: 'io.vertx', name:'vertx-codetrans', version:vertxVersion
  provided group: 'io.vertx', name:'vertx-rx-java', version:vertxVersion
  provided group: 'io.vertx', name:'vertx-lang-groovy', version:vertxVersion
  provided group: 'io.vertx', name:'vertx-lang-js', version:vertxVersion
  provided group: 'io.vertx', name:'vertx-lang-ruby', version:vertxVersion
}

apply from: file(rootDir.path + '/gradle/vertx/docs.gradle')

compileJava {
  dependsOn annotationProcessing
}

test {
  exclude '**/BtVertxTestBase.class'
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask('sonarqube')) {
      sonarqube {
        properties {
          property 'sonar.projectKey', project.group + '.vertx:' + rootProject.artifactid
        }
      }
    }
}
