// properties
def docsDir           = rootProject.hasProperty('docsDir')?rootProject.docsDir:file(project.projectDir.absolutePath + '/src/docs')
def aritfactDocsDir   = rootProject.hasProperty('aritfactDocsDir')?rootProject.aritfactDocsDir:file(docsDir.absolutePath + project.artifactid)
def asciidocDir       = rootProject.hasProperty('asciidocDir')?rootProject.asciidocDir:file(docsDir.absolutePath + '/asciidoc')

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }

  }
  dependencies {
    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
    classpath "com.eriwen:gradle-js-plugin:2.14.1"
  }
}

task annotationProcessing(type: JavaCompile, group: 'build', description: 'Process the sources using the vertx CodeGenProcessor and DocGenProcessor') { // codegen
  source = sourceSets.main.java
  classpath = configurations.compile + configurations.provided
  destinationDir = new File(buildDir, 'generated')
  options.compilerArgs = [
   "-XDignore.symbol.file",
   "-Adocgen.output=${asciidocDir}/\$lang",
   "-Amaven.groupId=${project.group}",
   "-Amaven.artifactId=${project.artifactid}",
   "-Amaven.version=${project.version}",
    "-proc:only",
    "-processor", "io.vertx.codegen.CodeGenProcessor,io.vertx.docgen.JavaDocGenProcessor,io.vertx.docgen.DocGenProcessor",
    "-AoutputDirectory=${project.projectDir}/src/main"
  ]
}

apply plugin: com.eriwen.gradle.js.JsPlugin

task jsdocs (type: com.eriwen.gradle.js.tasks.JsDocTask){
    source =sourceSets.main.resources.srcDirs
    destinationDir = file(aritfactDocsDir.path + '/js/jsdoc')
    //options.options = ['--recurse']
}

jsdocs.onlyIf {skipDoc == 'false'}

apply plugin: 'groovy'
groovydoc {
  destinationDir = file(aritfactDocsDir.path + '/groovy/groovydoc')
  includes = ['**/*.groovy']
}
groovydoc.onlyIf {skipDoc == 'false'}

apply plugin: org.asciidoctor.gradle.AsciidoctorPlugin
asciidoctor {
  dependsOn annotationProcessing
  sourceDir = asciidocDir
  outputDir = aritfactDocsDir
  attributes 'source-highlighter': 'coderay',
              numbered: '',
              toc: 'left',
              toclevels: '3',
              'version': project.version
  separateOutputDirs false

  backends 'html5'
  options doctype: 'book'
}
asciidoctor.onlyIf {skipDoc == 'false'}

task packageSource(type: Zip, group: 'documentation', description: 'Package all documentation for the project into a zip file'){
  dependsOn annotationProcessing
  dependsOn groovydoc
  dependsOn javadoc
  dependsOn asciidoctor
  dependsOn jsdocs
  includes = [asciidocDir.path, javadoc.destinationDir.path]
}

clean {
  delete project.projectDir.absolutePath+ '/src/main/generated'
  delete docsDir
}

javadoc {
  dependsOn annotationProcessing
  exclude '**/package-info.java'
  destinationDir file(docsDir.absolutePath + '/apidocs')
}
 javadocJar {
     from javadoc.destinationDir // We need to reset this since we changed the output dir
 }
